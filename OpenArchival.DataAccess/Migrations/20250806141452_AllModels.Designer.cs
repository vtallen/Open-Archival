// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenArchival.DataAccess;

#nullable disable

namespace OpenArchival.DataAccess.Migrations
{
    [DbContext(typeof(ArchiveDbContext))]
    [Migration("20250806141452_AllModels")]
    partial class AllModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArtifactEntryArtifactEntryTag", b =>
                {
                    b.Property<int>("ArtifactEntriesId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("ArtifactEntriesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ArtifactEntryArtifactEntryTag");
                });

            modelBuilder.Entity("ArtifactGroupingArtifactGrouping", b =>
                {
                    b.Property<int>("ArtifactGroupingId")
                        .HasColumnType("integer");

                    b.Property<int>("RelatedArtifactGroupingsId")
                        .HasColumnType("integer");

                    b.HasKey("ArtifactGroupingId", "RelatedArtifactGroupingsId");

                    b.HasIndex("RelatedArtifactGroupingsId");

                    b.ToTable("RelatedGroupings", (string)null);
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArchiveCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("FieldDescriptions")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<List<string>>("FieldNames")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("FieldSeparator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ArchiveCategory");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactDefect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ArtifactDefects");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtifactNumber")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<DateTime>>("AssociatedDates")
                        .HasColumnType("timestamp with time zone[]");

                    b.PrimitiveCollection<List<string>>("Defects")
                        .HasColumnType("text[]");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileTextContent")
                        .HasColumnType("text");

                    b.Property<bool>("IsPublicallyVisible")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<List<string>>("Links")
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<List<string>>("ListedNames")
                        .HasColumnType("text[]");

                    b.Property<int?>("ParentArtifactGroupingId")
                        .HasColumnType("integer");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentArtifactGroupingId");

                    b.ToTable("ArtifactEntries");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactEntryTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtifactGroupingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactGroupingId");

                    b.ToTable("ArtifactEntryTags");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactGrouping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsPublicallyVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ArtifactGroupings");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.AssociatedName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentArtifactEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentArtifactEntryId");

                    b.ToTable("ArtifactAssocaitedNames");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.FilePathListing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentArtifactEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentArtifactEntryId");

                    b.ToTable("ArtifactFilePaths");
                });

            modelBuilder.Entity("ArtifactEntryArtifactEntryTag", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactEntry", null)
                        .WithMany()
                        .HasForeignKey("ArtifactEntriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenArchival.DataAccess.ArtifactEntryTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArtifactGroupingArtifactGrouping", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactGrouping", null)
                        .WithMany()
                        .HasForeignKey("ArtifactGroupingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenArchival.DataAccess.ArtifactGrouping", null)
                        .WithMany()
                        .HasForeignKey("RelatedArtifactGroupingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactEntry", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactGrouping", "ParentArtifactGrouping")
                        .WithMany("ChildArtifactEntries")
                        .HasForeignKey("ParentArtifactGroupingId");

                    b.Navigation("ParentArtifactGrouping");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactEntryTag", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactGrouping", null)
                        .WithMany("ChildTags")
                        .HasForeignKey("ArtifactGroupingId");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactGrouping", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArchiveCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("OpenArchival.DataAccess.IdentifierFields", "IdentifierFields", b1 =>
                        {
                            b1.Property<int>("ArtifactGroupingId")
                                .HasColumnType("integer");

                            b1.PrimitiveCollection<List<string>>("Values")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.HasKey("ArtifactGroupingId");

                            b1.ToTable("ArtifactGroupings");

                            b1.ToJson("IdentifierFields");

                            b1.WithOwner()
                                .HasForeignKey("ArtifactGroupingId");
                        });

                    b.Navigation("Category");

                    b.Navigation("IdentifierFields")
                        .IsRequired();
                });

            modelBuilder.Entity("OpenArchival.DataAccess.AssociatedName", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactEntry", "ParentArtifactEntry")
                        .WithMany()
                        .HasForeignKey("ParentArtifactEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentArtifactEntry");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.FilePathListing", b =>
                {
                    b.HasOne("OpenArchival.DataAccess.ArtifactEntry", "ParentArtifactEntry")
                        .WithMany("Files")
                        .HasForeignKey("ParentArtifactEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentArtifactEntry");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactEntry", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("OpenArchival.DataAccess.ArtifactGrouping", b =>
                {
                    b.Navigation("ChildArtifactEntries");

                    b.Navigation("ChildTags");
                });
#pragma warning restore 612, 618
        }
    }
}
